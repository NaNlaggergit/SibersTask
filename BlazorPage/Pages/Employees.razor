@page "/employees"
@inject HttpClient Http
@using BlazorPage.Models

<h3>Список сотрудников</h3>

@if (employees == null)
{
    <p>Загрузка данных...</p>
}
else if (!employees.Any())
{
    <p>Сотрудники не найдены</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>ФИО</th>
                <th>Email</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in employees)
            {
                <tr>
                    <td>@emp.Id</td>
                    <td>@emp.LastName @emp.FirstName @emp.MiddleName</td>
                    <td>@emp.Email</td>
                    <td>
                        <a href="@($"employees/edit/{emp.Id}")" class="btn btn-sm btn-primary">Редактировать</a>
                        <button @onclick="@(() => DeleteEmployee(emp.Id))" class="btn btn-sm btn-danger">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<EmployeeModel> employees = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
    }

    private async Task LoadEmployees()
    {
        employees = await Http.GetFromJsonAsync<List<EmployeeModel>>("api/employee");
    }

    private async Task DeleteEmployee(int id)
    {
        var response = await Http.DeleteAsync($"api/employee/{id}");
        if (response.IsSuccessStatusCode)
        {
            await LoadEmployees();
        }
    }
}